/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0-rc-1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java-library'
    id 'application'
    id 'org.springframework.boot' version '3.1.0'
    id "io.spring.dependency-management" version "1.1.0"
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.93.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: '3.1.0'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '3.1.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:sockjs-client:1.0.2'
    implementation 'org.webjars:stomp-websocket:2.3.3'
    implementation group: 'org.webjars', name: 'bootstrap', version: '5.1.0'
    implementation 'org.webjars:jquery:3.1.1-1'

}

application {
    // Define the main class for the application.
    mainClass = 'ru.maxeltr.homeMq2t.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
